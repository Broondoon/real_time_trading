services:
  microservice-template:
    build: 
          context: .
          dockerfile: ./microservice-template/Dockerfile
    ports:
      - "8000:8000"
    networks:
       - go-network

  matching-engine-microservice:
    build: 
          context: .
          dockerfile: ./matching-engine-service/Dockerfile
    ports:
      - "8080:8080"
    networks:
       - go-network

  stock-order-db:
    image: postgres:latest
    restart: always
    env_file:
      - .env
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./stock-order-database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER_STOCK_ORDER -d $POSTGRES_DB_STOCK_ORDER"]
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - go-network

networks:
  go-network:
    driver: bridge           # Use a bridge network to enable container communication